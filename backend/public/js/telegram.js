/**
 * Telegram WebApp SDK Integration
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram Mini App API
 */

class TelegramWebApp {
    constructor() {
        this.isTelegram = false;
        this.webApp = null;
        this.init();
    }

    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
        if (window.Telegram && window.Telegram.WebApp) {
            this.webApp = window.Telegram.WebApp;
            this.isTelegram = true;
            this.setupTelegram();
            console.log('‚úÖ Telegram WebApp SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.log('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤–Ω–µ Telegram');
        }
    }

    setupTelegram() {
        if (!this.isTelegram) return;

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
        this.applyTheme();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ viewport
        this.webApp.expand();
        this.webApp.ready();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MainButton
        this.setupMainButton();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ BackButton
        this.setupBackButton();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Haptic feedback
        this.setupHaptic();

        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        this.webApp.onEvent('themeChanged', () => {
            this.applyTheme();
        });

        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport
        this.webApp.onEvent('viewportChanged', () => {
            this.handleViewportChange();
        });
    }

    applyTheme() {
        if (!this.isTelegram) return;

        const theme = this.webApp.colorScheme; // 'light' –∏–ª–∏ 'dark'
        const themeParams = this.webApp.themeParams;
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ Telegram
        document.documentElement.style.setProperty('--tg-bg-color', themeParams.bg_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-text-color', themeParams.text_color || '#000000');
        document.documentElement.style.setProperty('--tg-hint-color', themeParams.hint_color || '#999999');
        document.documentElement.style.setProperty('--tg-link-color', themeParams.link_color || '#2481cc');
        document.documentElement.style.setProperty('--tg-button-color', themeParams.button_color || '#2481cc');
        document.documentElement.style.setProperty('--tg-button-text-color', themeParams.button_text_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-secondary-bg-color', themeParams.secondary_bg_color || '#f1f1f1');

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫ body –¥–ª—è Telegram WebApp
        document.body.classList.add('telegram-webapp');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—É –∏–≥—Ä—ã
        this.updateGameTheme(theme);
    }

    updateGameTheme(theme) {
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–º—É –∏–≥—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã Telegram
        const gameTheme = theme === 'dark' ? 'dark' : 'light';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—É –≤ –∏–≥—Ä–µ
        if (window.game && window.game.setTheme) {
            window.game.setTheme(gameTheme);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã
        this.updateUITheme(theme);
    }

    updateUITheme(theme) {
        const isDark = theme === 'dark';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        const modals = document.querySelectorAll('.modal');
        modals.forEach(modal => {
            if (isDark) {
                modal.classList.add('theme-dark');
                modal.classList.remove('theme-light');
            } else {
                modal.classList.add('theme-light');
                modal.classList.remove('theme-dark');
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        const buttons = document.querySelectorAll('.btn');
        buttons.forEach(btn => {
            if (isDark) {
                btn.classList.add('theme-dark');
                btn.classList.remove('theme-light');
            } else {
                btn.classList.add('theme-light');
                btn.classList.remove('theme-dark');
            }
        });
    }

    setupMainButton() {
        if (!this.isTelegram) return;

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        this.webApp.MainButton.setText('üéÆ –ò–≥—Ä–∞—Ç—å');
        this.webApp.MainButton.show();
        
        this.webApp.MainButton.onClick(() => {
            this.handleMainButtonClick();
        });
    }

    setupBackButton() {
        if (!this.isTelegram) return;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º BackButton –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
        this.webApp.BackButton.onClick(() => {
            this.handleBackButtonClick();
        });
    }

    setupHaptic() {
        if (!this.isTelegram) return;

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ haptic feedback
        this.webApp.HapticFeedback.impactOccurred('medium');
    }

    handleMainButtonClick() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–µ
        if (window.game && window.game.isPaused) {
            window.game.resume();
        } else if (window.game && !window.game.isRunning) {
            window.game.start();
        }
    }

    handleBackButtonClick() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞–∑–∞–¥
        if (window.game && window.game.isRunning) {
            window.game.pause();
        } else {
            // –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            this.showMainMenu();
        }
    }

    handleViewportChange() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π viewport
        if (window.game && window.game.environment) {
            window.game.environment.updateCanvasSize();
        }
    }

    showMainMenu() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mainMenu = document.getElementById('main-menu');
        const app = document.getElementById('app');
        
        if (mainMenu && app) {
            mainMenu.style.display = 'block';
            app.classList.add('overlay-open');
            this.hideMainButton();
            this.showBackButton();
        }
    }

    hideMainMenu() {
        // –°–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mainMenu = document.getElementById('main-menu');
        const app = document.getElementById('app');
        
        if (mainMenu && app) {
            mainMenu.style.display = 'none';
            app.classList.remove('overlay-open');
            this.showMainButton();
            this.hideBackButton();
        }
    }

    showMainButton() {
        if (!this.isTelegram) return;
        this.webApp.MainButton.show();
    }

    hideMainButton() {
        if (!this.isTelegram) return;
        this.webApp.MainButton.hide();
    }

    showBackButton() {
        if (!this.isTelegram) return;
        this.webApp.BackButton.show();
    }

    hideBackButton() {
        if (!this.isTelegram) return;
        this.webApp.BackButton.hide();
    }

    // Haptic feedback –º–µ—Ç–æ–¥—ã
    hapticImpact(style = 'medium') {
        if (!this.isTelegram) return;
        this.webApp.HapticFeedback.impactOccurred(style);
    }

    hapticNotification(type = 'success') {
        if (!this.isTelegram) return;
        this.webApp.HapticFeedback.notificationOccurred(type);
    }

    hapticSelectionChange() {
        if (!this.isTelegram) return;
        this.webApp.HapticFeedback.selectionChanged();
    }

    // ShareMessage –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    shareReferralLink(referralCode) {
        if (!this.isTelegram) {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            this.copyToClipboard(referralCode);
            return;
        }

        const shareText = `üéÆ –ò–≥—Ä–∞–π –≤ Dino Runner –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã!\n\n–ò—Å–ø–æ–ª—å–∑—É–π –º–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É:\n${referralCode}\n\n–ü–æ–ª—É—á–∏ 10% –±–æ–Ω—É—Å –æ—Ç –º–æ–∏—Ö –æ–±–º–µ–Ω–æ–≤!`;
        
        this.webApp.showPopup({
            title: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è',
            message: shareText,
            buttons: [
                {
                    type: 'default',
                    text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è',
                    id: 'share'
                },
                {
                    type: 'cancel',
                    text: '–û—Ç–º–µ–Ω–∞'
                }
            ]
        }, (buttonId) => {
            if (buttonId === 'share') {
                this.webApp.switchInlineQuery(shareText, ['users', 'groups', 'channels']);
            }
        });
    }

    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (fallback)
    async copyToClipboard(text) {
        try {
            await navigator.clipboard.writeText(text);
            this.showToast('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(message, duration = 3000) {
        if (!this.isTelegram) {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            alert(message);
            return;
        }

        this.webApp.showAlert(message);
    }

    // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserData() {
        if (!this.isTelegram) {
            return {
                id: null,
                first_name: '–ì–æ—Å—Ç—å',
                last_name: '',
                username: null,
                language_code: 'ru',
                is_premium: false
            };
        }

        return {
            id: this.webApp.initDataUnsafe?.user?.id,
            first_name: this.webApp.initDataUnsafe?.user?.first_name,
            last_name: this.webApp.initDataUnsafe?.user?.last_name,
            username: this.webApp.initDataUnsafe?.user?.username,
            language_code: this.webApp.initDataUnsafe?.user?.language_code,
            is_premium: this.webApp.initDataUnsafe?.user?.is_premium
        };
    }

    // –ü–æ–ª—É—á–∏—Ç—å initData –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    getInitData() {
        if (!this.isTelegram) return null;
        return this.webApp.initData;
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–º–∏—É–º
    isPremium() {
        if (!this.isTelegram) return false;
        return this.webApp.initDataUnsafe?.user?.is_premium || false;
    }

    // –ü–æ–ª—É—á–∏—Ç—å —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getLanguage() {
        if (!this.isTelegram) return 'ru';
        return this.webApp.initDataUnsafe?.user?.language_code || 'ru';
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å popup —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    showConfirm(title, message, onConfirm, onCancel) {
        if (!this.isTelegram) {
            const result = confirm(message);
            if (result && onConfirm) onConfirm();
            if (!result && onCancel) onCancel();
            return;
        }

        this.webApp.showPopup({
            title: title,
            message: message,
            buttons: [
                {
                    type: 'default',
                    text: '–î–∞',
                    id: 'confirm'
                },
                {
                    type: 'cancel',
                    text: '–ù–µ—Ç'
                }
            ]
        }, (buttonId) => {
            if (buttonId === 'confirm' && onConfirm) {
                onConfirm();
            } else if (onCancel) {
                onCancel();
            }
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å popup —Å –≤–≤–æ–¥–æ–º
    showInput(title, message, placeholder, onConfirm, onCancel) {
        if (!this.isTelegram) {
            const result = prompt(message, placeholder);
            if (result !== null && onConfirm) onConfirm(result);
            if (result === null && onCancel) onCancel();
            return;
        }

        this.webApp.showPopup({
            title: title,
            message: message,
            buttons: [
                {
                    type: 'default',
                    text: '–û–∫',
                    id: 'confirm'
                },
                {
                    type: 'cancel',
                    text: '–û—Ç–º–µ–Ω–∞'
                }
            ]
        }, (buttonId) => {
            if (buttonId === 'confirm' && onConfirm) {
                onConfirm(placeholder);
            } else if (onCancel) {
                onCancel();
            }
        });
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.telegramApp = new TelegramWebApp();
